/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from "./routes/__root";
import { Route as TodoRouteImport } from "./routes/todo";
import { Route as LoginRouteImport } from "./routes/login";
import { Route as IndexRouteImport } from "./routes/index";

const TodoRoute = TodoRouteImport.update({
	id: "/todo",
	path: "/todo",
	getParentRoute: () => rootRouteImport,
} as any);
const LoginRoute = LoginRouteImport.update({
	id: "/login",
	path: "/login",
	getParentRoute: () => rootRouteImport,
} as any);
const IndexRoute = IndexRouteImport.update({
	id: "/",
	path: "/",
	getParentRoute: () => rootRouteImport,
} as any);

export interface FileRoutesByFullPath {
	"/": typeof IndexRoute;
	"/login": typeof LoginRoute;
	"/todo": typeof TodoRoute;
}
export interface FileRoutesByTo {
	"/": typeof IndexRoute;
	"/login": typeof LoginRoute;
	"/todo": typeof TodoRoute;
}
export interface FileRoutesById {
	__root__: typeof rootRouteImport;
	"/": typeof IndexRoute;
	"/login": typeof LoginRoute;
	"/todo": typeof TodoRoute;
}
export interface FileRouteTypes {
	fileRoutesByFullPath: FileRoutesByFullPath;
	fullPaths: "/" | "/login" | "/todo";
	fileRoutesByTo: FileRoutesByTo;
	to: "/" | "/login" | "/todo";
	id: "__root__" | "/" | "/login" | "/todo";
	fileRoutesById: FileRoutesById;
}
export interface RootRouteChildren {
	IndexRoute: typeof IndexRoute;
	LoginRoute: typeof LoginRoute;
	TodoRoute: typeof TodoRoute;
}

declare module "@tanstack/react-router" {
	interface FileRoutesByPath {
		"/todo": {
			id: "/todo";
			path: "/todo";
			fullPath: "/todo";
			preLoaderRoute: typeof TodoRouteImport;
			parentRoute: typeof rootRouteImport;
		};
		"/login": {
			id: "/login";
			path: "/login";
			fullPath: "/login";
			preLoaderRoute: typeof LoginRouteImport;
			parentRoute: typeof rootRouteImport;
		};
		"/": {
			id: "/";
			path: "/";
			fullPath: "/";
			preLoaderRoute: typeof IndexRouteImport;
			parentRoute: typeof rootRouteImport;
		};
	}
}

const rootRouteChildren: RootRouteChildren = {
	IndexRoute: IndexRoute,
	LoginRoute: LoginRoute,
	TodoRoute: TodoRoute,
};
export const routeTree = rootRouteImport
	._addFileChildren(rootRouteChildren)
	._addFileTypes<FileRouteTypes>();
